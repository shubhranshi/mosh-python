07 Changing the Models

We are going to add a new attribute to our classes in the "models.py' from the "movie" app.
We add attribute "date_created" to store the time when each field is created.
It is best to use the "timezone" class from the "django.utils" module, instead of the
"datetime" module from Python. Because it takes into consideration the time zone.

from django.utils import timezone

class Genre(models.Model):
    name = models.CharField(max_length=255, unique=True)
    date_created = models.DateTimeField(default=timezone.now)

class Movie(models.Model):
    title = models.CharField(max_length=255, unique=True)
    release_year = models.IntegerField()
    number_in_stock = models.IntegerField(max_length=4)
    daily_rate = models.FloatField()
    genre = models.ForeignKey(Genre, on_delete=models.CASCADE)
    date_created = models.DateTimeField(default=timezone.now)

We had the "date_created" field to our models class
We just pass a reference the "timezone.now" method,
and we do not call that method like this "timezone.now()".
If we call the method, this will hardcode the current time in the migration.

After making the changes to our classes we have to make a new migration.
> python manage.py makemigrations

We can see a new migrations file with add field operation, that will modify the "movie" table.
Also, we should never delete migrations (its like each file is a building step for our database)
So never ever delete any migration.

And then apply this new migrations to our database.
> python manage.py migrate

To know what SQL statements are generated by Django as a result of applying a specific migration.
Execute the below on terminal:
> python manage.py sqlmigrate movies 0001
So we can see all the sql statements.